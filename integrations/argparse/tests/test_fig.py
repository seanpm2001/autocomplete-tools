import argparse
import pytest
from argparse_complete_fig import fig
  
### Fixtures
@pytest.fixture
def generate_cli_spec():
    return '''// Autogenerated by argparse_complete_fig
const completionSpec: Fig.Spec = {
  "name": "__main__.py",
  "options": [
    {
      "name": [
        "-h",
        "--help"
      ],
      "description": "show this help message and exit"
    },
    {
      "name": "--output",
      "description": "Select output directory",
      "args": [
        {
          "name": "O"
        },
        {
          "isOptional": true,
          "isVariadic": true,
          "name": "O",
          "optionsCanBreakVariadicArg": true
        }
      ]
    },
    {
      "name": "--sum",
      "description": "sum the integers (default: find the max)"
    }
  ],
  "args": [
    {
      "name": "N",
      "description": "an integer for the accumulator"
    },
    {
      "isOptional": true,
      "isVariadic": true,
      "name": "N",
      "optionsCanBreakVariadicArg": true,
      "description": "an integer for the accumulator"
    }
  ]
}
export default completionSpec;'''

### CLI Definitions

def get_cli_parser():
    parser = argparse.ArgumentParser(description="A root description")
    parser.add_argument('integers', metavar='N', type=int, 
        nargs='+',help='an integer for the accumulator')
    parser.add_argument('--output', dest='accumulate', metavar="O", type=str, nargs=argparse.ONE_OR_MORE, help="Select output directory")
    parser.add_argument('--sum', dest='accumulate', action='store_const',
        const=sum, default=max, help='sum the integers (default: find the max)')
    return parser

### Test cases
def test_cli_generate(generate_cli_spec):
    parser = get_cli_parser()
    assert fig.generate_completion_spec(parser) == generate_cli_spec
